{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/templates/podcastTemplate.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/image.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","BodyWrapper","styled","div","Title","h1","DateWrapper","h4","Text","body","YoutubeWrapper","IframeStyle","iframe","Template","mdx","data","frontmatter","publicationDate","id","title","slug","embed","youtubeEmbedURL","image","featuredImage","excerpt","concat","childImageSharp","fluid","description","pathname","this","props","location","src","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","allow","allowFullScreen","pageQuery","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","useMDXScope","scope","children","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---src-templates-podcast-template-js-3af7a419f67e79058784.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Img from \"gatsby-image\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst BodyWrapper = styled.div`\n  margin: 0 10vw;\n`\n\nconst Title = styled.h1`\n  font-family: Lusitana;\n`\n\nconst DateWrapper = styled.h4`\n  font-family: Lusitana;\n  line-height: 0;\n`\n\nconst Text = styled.body`\n  font-family: Clear Sans;\n  margin: 10vh auto;\n`\n\nconst YoutubeWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 56.25%;\n`\n\nconst IframeStyle = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n`\n\nexport default function Template({ data : { mdx } }) {\n  const { frontmatter, body, id } = mdx\n  const { publicationDate, slug, title, embed, youtubeEmbedURL, featuredImage, excerpt} = frontmatter\n\n  const siteTitle = \" | iDPI\"\n  const name = frontmatter.title.concat(siteTitle)\n\n  const image = frontmatter.featuredImage.childImageSharp.fluid\n\n  return(\n    <Layout>\n      <SEO\n        title={frontmatter.title}\n        image={image}\n        description={frontmatter.excerpt}\n        pathname={this.props.location.pathname}\n      />\n      <BodyWrapper>\n        <Title>{title}</Title>\n        <DateWrapper>{publicationDate}</DateWrapper>\n        <Text>\n          <MDXRenderer>{body}</MDXRenderer>\n        </Text>\n        <iframe src={embed} frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowfullscreen />\n        <YoutubeWrapper>\n          <IframeStyle\n            src={youtubeEmbedURL}\n            title={title}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            webkitallowfullscreen=\"true\"\n            mozallowfullscreen=\"true\"\n            allowFullScreen\n          />\n        </YoutubeWrapper>\n      </BodyWrapper>\n    </Layout>\n  )\n\n}\n\nexport const pageQuery = graphql`\n  query($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        publicationDate(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        embed\n        youtubeEmbedURL\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n"],"sourceRoot":""}