{"version":3,"sources":["webpack:///./src/templates/podcastTemplate.js"],"names":["BodyWrapper","styled","div","Title","h2","DateWrapper","h3","EmbedWrapper","Text","body","Template","mdx","data","frontmatter","title","concat","publicationDate","src","url","width","height","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","pageQuery"],"mappings":"mpBAWA,IAAMA,EAAcC,IAAOC,IAAV,KAIXC,EAAQF,IAAOG,GAAV,KAILC,EAAcJ,IAAOK,GAAV,KAIXC,EAAeN,IAAOC,IAAV,KAIZM,EAAOP,IAAOQ,KAAV,KAIK,SAASC,EAAT,GAAuC,IAAVC,EAAS,EAAlBC,KAASD,IAClCE,EAAsBF,EAAtBE,YAAaJ,EAASE,EAATF,KAGRI,EAAYC,MAAMC,OADb,WAGlB,OACE,oCAEE,kBAACf,EAAD,KACE,kBAACG,EAAD,KAAQU,EAAYC,OACpB,kBAACT,EAAD,KAAcQ,EAAYG,iBAC1B,kBAACT,EAAD,KACE,4BAAQU,IAAKJ,EAAYK,IAAKC,MAAM,MAAMC,OAAO,MAAMC,YAAY,IAAIC,sBAAsB,OAAOC,mBAAmB,OAAOC,iBAAe,KAE/I,kBAAChB,EAAD,KACE,kBAAC,cAAD,KAAcC,MAQjB,IAAMgB,EAAS","file":"component---src-templates-podcast-template-js-2624a5913f76d6c16b1b.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Img from \"gatsby-image\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst BodyWrapper = styled.div`\n\n`\n\nconst Title = styled.h2`\n\n`\n\nconst DateWrapper = styled.h3`\n\n`\n\nconst EmbedWrapper = styled.div`\n\n`\n\nconst Text = styled.body`\n\n`\n\nexport default function Template({ data : { mdx } }) {\n  const { frontmatter, body } = mdx\n\n  const siteTitle = \" | iDPI\"\n  const name = frontmatter.title.concat(siteTitle)\n\n  return(\n    <>\n\n      <BodyWrapper>\n        <Title>{frontmatter.title}</Title>\n        <DateWrapper>{frontmatter.publicationDate}</DateWrapper>\n        <EmbedWrapper>\n          <iframe src={frontmatter.url} width=\"500\" height=\"140\" frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowfullscreen></iframe>\n        </EmbedWrapper>\n        <Text>\n          <MDXRenderer>{body}</MDXRenderer>\n        </Text>\n      </BodyWrapper>\n    </>\n  )\n\n}\n\nexport const pageQuery = graphql`\n  query($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        publicationDate(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        url\n      }\n    }\n  }\n`\n"],"sourceRoot":""}