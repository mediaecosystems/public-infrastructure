{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/image.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","mq","map","bp","IndexWrapper","styled","div","AboutText","main","YoutubeWrapper","IframeStyle","iframe","IndexPage","data","post","aboutText","video","youtubeEmbedURL","edges","title","body","node","frontmatter","src","frameborder","allow","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","indexQuery","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---src-pages-index-js-89570894f479988191e4.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport styled from \"@emotion/styled\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport \"typeface-clear-sans\"\nimport \"typeface-lusitana\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst breakpoints = [600]\n\nconst mq = breakpoints.map(\n  bp => `@media (min-width: ${bp}px)`\n)\n\nconst IndexWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n`\n\nconst AboutText = styled.main`\n  grid-column: 1/13;\n  font-family: Clear Sans;\n  ${mq[0]} {\n    grid-column: 1/7;\n  }\n`\n\nconst YoutubeWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 56.25%;\n`\n\nconst IframeStyle = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n`\n\nconst IndexPage = ({ data }) => {\n  const post = data.aboutText\n  const video = data.youtubeEmbedURL.edges\n\n  return(\n    <Layout>\n      <SEO title=\"Home\" />\n      <IndexWrapper>\n        <AboutText>\n          <MDXRenderer>{post.body}</MDXRenderer>\n          {video.map(({ node }) => {\n            const { title, youtubeEmbedURL } = node.frontmatter\n            return(\n              <YoutubeWrapper>\n                <IframeStyle\n                  src={youtubeEmbedURL}\n                  title={title}\n                  frameborder=\"0\"\n                  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                  webkitallowfullscreen=\"true\"\n                  mozallowfullscreen=\"true\"\n                  allowFullScreen\n                />\n              </YoutubeWrapper>\n            )\n          })}\n        </AboutText>\n      </IndexWrapper>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const indexQuery = graphql`\n   query IndexQuery {\n    aboutText: mdx(frontmatter: {title: {eq: \"About Text\"}}) {\n      body\n    }\n    youtubeEmbedURL: allMdx(filter: {frontmatter: {type: {eq: \"podcast-episode\"}}}, sort: {fields: frontmatter___publicationDate, order: DESC}, limit: 1) {\n      edges {\n        node {\n          frontmatter {\n            title\n            youtubeEmbedURL\n          }\n        }\n      }\n    }\n  }\n`\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n"],"sourceRoot":""}